$(wget --timeout=30 http://ipinfo.io/ip -qO -)
PIP="$(wget --timeout=30 http://ipinfo.io/ip -qO - || echo 'Not Available')"
echo $PIP
PIP="$(wget --timeout=30 http://ipinfo.io/ip -qO - || echo 'Not Available')"
echo $PIP
[[ $(ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net &>/dev/null) ]] && echo "CONNETED" || echo "DISCONNECTED"
STATUS=[[ $($(ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]] && echo "CONNETED" || echo "DISCONNECTED"
echo $STATUS
[[ $($(ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]] && "CONNETED" || "DISCONNECTED"
[[ $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]] && "CONNETED" || "DISCONNECTED"
STATUS=[[ $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]] && "CONNETED" || "DISCONNECTED"
STATUS=[[ $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]] && echo "CONNETED" || echo"DISCONNECTED"
STATUS=[[ $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]] && echo "CONNETED" || echo "DISCONNECTED"
STATUS=[[ (ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null ]] && echo "CONNETED" || echo "DISCONNECTED"
STATUS=[[ $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]] && echo "CONNETED" || echo "DISCONNECTED"
STATUS=$((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null)
echo $STATUS
echo $STATUS && echo "yeh" || echo "nah"
STATUS=[[ $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]]
STATUS=$([[ $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]])
echo $STATUS && echo "yeh" || echo "nah"
STATUS=$([[ $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]] && echo "CONNECTED" || echo "DISCONNECTED" )
STATUS=$([[ $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]] && echo "CONNECTED" || echo "DISCONNECTED")
echo $STATUS && echo "yeh" || echo "nah"
echo $STATUS && echo "yeh" || echo "nah"
echo $STATUS
echo $STATUS && echo "yeh" || echo "nah"
echo $STATUS && echo "yeh" || echo "nah"
STATUS=$([[ $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null) ]] && echo "CONNECTED" || echo "DISCONNECTED")
echo $STATUS && echo "yeh" || echo "nah"
STATUS=[[ $(ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null ]] && echo "CONNETED" || echo "DISCONNECTED"
echo $STATUS
STATUS= $((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null && echo "CONNETED" || echo "DISCONNECTED")
STATUS=$((ping -c 1 archlinux.org || ping -c 1 google.com || ping -c 1 bitbucket.org || ping -c 1 github.com || ping -c 1 sourceforge.net) &>/dev/null && echo "CONNETED" || echo "DISCONNECTED")
echo $STATUS
MESSAGE=$(echo -e "Status: $STATUS\t\tIP: $PIP") && echo $MESSAGE
MESSAGE=$(echo -e "Status: $STATUS\t\t\tIP: $PIP") && echo $MESSAGE
echo -e "Status: $STATUS\t\t\tIP: $PIP"
MESSAGE="Status: $STATUS"$'\t\t'"IP: $PIP" || echo $MESSAGE
MESSAGE="Status: $STATUS"$'\t\t'"IP: $PIP" && echo $MESSAGE
MESSAGE="Status: $STATUS"$'\t\t'"IP: $PIP" && echo -e $MESSAGE
MESSAGE="Status: $STATUS"$'\t\t'"IP: $PIP" && echo -e "$MESSAGE"
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
netctl status
netctl list
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi" -dumptheme
rofi -dmenu -theme "${HOME}/.config/rofi/message.rasi" -dumptheme
rofi -dmenu -theme "${HOME}/.config/rofi/message.rasi"
rofi -dmenu -theme "${HOME}/.config/rofi/message.rasi"
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
netctl-auto
netctl-auto list
netctl-auto list
netctl list
netctl list | grep "*" | cut -d " " -f 2
active_SSID="$(netctl list | grep "*" | cut -d " " -f 2-)"
echo $active_SSID
./.config/polybar/scripts/rofi-netctl 
(echo "$PASSWORD" | sudo -S "$@") &> /dev/null || rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
(echo "asd" | sudo -S "$@") &> /dev/null || rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
(echo "b1@ckf1@re" | sudo -S "$@") &> /dev/null || rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
(echo "b1@ckf1@re" | sudo -S "netctl switch-to wlo1-DIGISOL@") &> /dev/null || rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
(echo "b1@ckf1@re" | sudo -S "netctl switch-to wlo1-jio@") &> /dev/null || rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
(echo "b1@ckf1@re" | sudo -S "netctl switch-to jio2@") &> /dev/null || rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
echo "b1@ckf1@re" | sudo -S "netctl switch-to jio2@" || rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
echo "b1@ckf1@re" | sudo -S "netctl switch-to jio2" || rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
printf 'b1@ckf1@re' | sudo -S "netctl switch-to jio2" || rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
printf 'b1@ckf1@re' | sudo -S "netctl switch-to jio2"
printf 'b1@ckf1@re' | sudo -S netctl switch-to jio2
echo 'b1@ckf1@re' | sudo -S netctl switch-to jio2
echo 'b1@ckf1@re' | sudo -Si netctl switch-to jio2
SUDO_ASKPASS="b1@ckf1@re" sudo -A "netctl switch-to jio2" || rofi -dmenu -mesg $'<b>Error:</b>\tInvalid password provided' -theme "${HOME}/.config/rofi/message.rasi"
chmod .config/rofi/askpass.sh 
chmod +x .config/rofi/askpass.sh 
./.config/rofi/askpass.sh 
./.config/polybar/scripts/rofi-netctl 
./.config/polybar/scripts/rofi-netctl 
netctl list
netctl list
./.config/polybar/scripts/rofi-netctl 
netctl list
./.config/polybar/scripts/rofi-netctl 
.config/rofi/askpass.sh 
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio2
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio2
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio2
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio2
rofi --help
rofi --help | grep -i
rofi -help
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio2
.config/rofi/askpass.sh
echo "$(.config/rofi/askpass.sh)"
echo "$(.config/rofi/askpass.sh)"
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio2
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio2
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio
echo "$(.config/rofi/askpass.sh)"
SUDO_ASKPASS=.config/rofi/askpass.sh sudo -A netctl switch-to jio
cd Notes/
note add "Create rofi applet for bluetooth"
note add "Fix column enumeration in start.rasi"
note list
bluetoothctl show | grep -q 'Powered:'
bluetoothctl show | grep -q 'Powered:'
bluetoothctl show
bluetoothctl show | grep -q "Powered:"
bluetoothctl show | grep -q "Powered:" || echo "nah"
DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-))
echo $DEVICES
echo ${DEVICES[@}}
echo ${DEVICES[@]}
echo ${DEVICES[1]}
echo ${DEVICES[3]}
bluetoothctl --help
bluetoothctl list
bluetoothctl show
bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e "Name\|Connected: yes" | grep -B1 "yes" | head -n 1 | cut -d\  -f2-
bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e "Name|Connected: yes" | grep -B1 "yes" | head -n 1 | cut -d -f2-
bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e "Name|Connected: yes" | grep -B1 "yes" | head -n 1 | cut -d ' ' -f2-
bluetoothctl devices | cut -f2 -d ' '
bluetoothctl devices | cut -f2 -d ' ' | while read uuid; do bluetoothctl info $uuid; done
bluetoothctl devices | cut -f2 -d ' ' | while read uuid; do bluetoothctl info $uuid; done | grep 'Name\|Connected: yes"
bluetoothctl devices | cut -f2 -d ' ' | while read uuid; do bluetoothctl info $uuid; done | grep 'Name\|Connected: yes'
bluetoothctl devices | cut -f2 -d ' ' | while read uuid; do bluetoothctl info $uuid; done | grep 'Name\|Connected: yes' | grep -B1 "yes"
bluetoothctl devices | cut -f2 -d ' ' | while read uuid; do bluetoothctl info $uuid; done | grep "Name\|Connected: yes" | grep -B1 "yes"
bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e "Name|Connected: yes" | grep -B1 "yes" | head -n 1 | cut -d ' ' -f2-
bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e "Name|Connected: yes" | grep -B1 "yes" | head -n 1 |
bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e "Name|Connected: yes" | grep -B1 "yes" | head -n 1
bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e "Name|Connected: yes" | grep -B1 "yes"
bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e "Name|Connected: yes"
bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e "Name\|Connected: yes" | grep -B1 "yes" | head -n 1
bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e "Name\|Connected: yes" | grep -B1 "yes" | head -n 1 | cut -d ' ' -f2-
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
bluetoothctl devices | cut -f2 -d ' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e 'Name\|Connected: yes' | grep -B1 'yes' | head -n 1 | cut -d ' ' -f2-
DEVICE="$(bluetoothctl devices | cut -f2 -d ' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e 'Name\|Connected: yes' | grep -B1 'yes' | head -n 1 | cut -d ' ' -f2-)"
echo $DEVICE
$DEVICE && echo "done"
-z $DEVICE
[ -z $DEVICE ]
[ ! -z $DEVICE ]
DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-))
echo $DEVICES
[ ! -z $DEVICE ] && echo "done"
[ ! -z $DEVICE ] && echo "done" || echo "bruh
'
"
[ ! -z $DEVICE ] && echo "done" || echo "bruh"
[ -nz $DEVICE ] && echo "done" || echo "bruh"
echo $DEVICE && "done"
echo ($DEVICE && "done")
./.config/polybar/scripts/rofi-bluetooth 
CONNECTED_DEVICE="$(bluetoothctl devices | cut -f2 -d ' ' | while read uuid; do bluetoothctl info $uuid; done | grep -e 'Name\|Connected: yes' | grep -B1 'yes' | head -n 1 | cut -d ' ' -f2-)"
		if [ -nz $CONNECTED_DEVICE ]; then 			STATUS="CONNECTED"; 			CONNECTED_DEVICE_STATUS=$CONNECTED_DEVICE; 		else 			STATUS="NOT CONNECTED"; 			CONNECTED_DEVICE_STATUS='Not Available'; 		fi
echo $STATUS
[ -nz $CONNECTED_DEVICE ]
$CONNECTED_DEVICE
[ -z $CONNECTED_DEVICE ]
[ ! -z $CONNECTED_DEVICE ]
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
echo -en '<span size=150% rise=-1500></span>\tRockerz\n<span size=150% rise=-1500></span>\t255\n<span size=150% rise=-1500></span>\tPro+\n<span size=150% rise=-1500></span>\t01590d05\n<span size=150% rise=-1500></span>\tb9dec89d\n<span size=150% rise=-1500></span>\tJBL\n<span size=150% rise=-1500></span>\tE25BT\n<span size=150% rise=-1500></span>\tJR_JioSTB-RFLSBLF82066137\n' | rofi -markup -markup-rows -dmenu -theme /home/utkarsh/.config/rofi/bluetooth-applet.rasi -mesg 'Status: NOT CONNECTED	Device: Not Available' -dmenu -selected-row 1
./.config/polybar/scripts/rofi-bluetooth 
IFS=' ' read -a DEVICES <<< "$(bluetoothctl devices | grep Device | cut -d ' ' -f 3-)"
echo $DEVICES
echo ${DEVICES[0]}
IFS=$'\n' read -a DEVICES <<< "$(bluetoothctl devices | grep Device | cut -d ' ' -f 3-)"
echo ${DEVICES[0]}
echo ${DEVICES[1]}
echo ${DEVICES[2]}
DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-))
DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-)) && echo DEVICES
DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-)) && echo $DEVICES
DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-)) && echo ${DEVICES[0]}
IFS=$'\n' DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-)) && echo ${DEVICES[0]}
IFS=$'\n' DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-)) && echo ${DEVICES[1]}
IFS=$'\n' DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-)) && echo ${DEVICES[2]}
IFS=$'\n' DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-)) && echo ${DEVICES[3]}
IFS=$'\n' DEVICES=($(bluetoothctl devices | grep Device | cut -d ' ' -f 3-)) && echo ${DEVICES[4]}
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
$options
options='<span size='\''150%'\'' rise='\''-1500'\''></span>\tRockerz 255 Pro+\n<span size='\''150%'\'' rise='\''-1500'\''></span>\t01590d05\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tb9dec89d\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tJBL E25BT\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tJR_JioSTB-RFLSBLF82066137\n'
++ echo -en '<span size='\''150%'\'' rise='\''-1500'\''></span>\tRockerz 255 Pro+\n<span size='\''150%'\'' rise='\''-1500'\''></span>\t01590d05\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tb9dec89d\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tJBL E25BT\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tJR_JioSTB-RFLSBLF82066137\n'
options='<span size='\''150%'\'' rise='\''-1500'\''></span>\tRockerz 255 Pro+\n<span size='\''150%'\'' rise='\''-1500'\''></span>\t01590d05\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tb9dec89d\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tJBL E25BT\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tJR_JioSTB-RFLSBLF82066137\n'
echo "${options}" | rofi -markup -markup-rows -dmenu -theme /home/utkarsh/.config/rofi/bluetooth-applet.rasi' -mesg 'Status: NOT CONNECTED	Device: Not Available' -dmenu -selected-row 1
echo "${options}" | rofi -markup -markup-rows -dmenu -theme '/home/utkarsh/.config/rofi/bluetooth-applet.rasi' -mesg 'Status: NOT CONNECTED	Device: Not Available' -dmenu -selected-row 1
echo $options | rofi -markup -markup-rows -dmenu -theme '/home/utkarsh/.config/rofi/bluetooth-applet.rasi' -mesg 'Status: NOT CONNECTED	Device: Not Available' -dmenu -selected-row 1
echo -en "${options}" | rofi -markup -markup-rows -dmenu -theme '/home/utkarsh/.config/rofi/bluetooth-applet.rasi' -mesg 'Status: NOT CONNECTED	Device: Not Available' -dmenu -selected-row 1
chosen="$(echo -en "$options" | rofi -markup -markup-rows -dmenu -theme '/home/utkarsh/.config/rofi/bluetooth-applet.rasi' -mesg 'Status: NOT CONNECTED	Device: Not Available' -dmenu -selected-row 1 2> /dev/null)"
$chosen
echo $chosen
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
[200~rofi -markup -markup-rows -dmenu -theme /home/utkarsh/.config/rofi/bluetooth-applet.rasi~
rofi -markup -markup-rows -dmenu -theme /home/utkarsh/.config/rofi/bluetooth-applet.rasi
cd ..
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth 
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
cd..
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth --status
.config/polybar/launch.sh 
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
ll .config/rofi/
ll .config/rofi/
./.config/polybar/scripts/rofi-bluetooth
cat /usr/bin/env
cat /usr/bin/env | grep bash
./.config/polybar/scripts/rofi-bluetooth
cat /bin/env | grep bash
cat /bin/env
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
echo -en "<span size='150%' rise='-1500'></span>\tRockerz 255 Pro+\n<span size='150%' rise='-1500'></span>\t01590d05\n<span size='150%' rise='-1500'></span>\tb9dec89d\n<span size='150%' rise='-1500'></span>\tJBL E25BT\n<span size='150%' rise='-1500'></span>\tJR_JioSTB-RFLSBLF82066137\n" | rofi -markup -markup-rows -theme "/home/utkarsh/.config/rofi/bluetooth-applet.rasi" -mesg "Status: NOT CONNECTED	Device: Not Available" -dmenu -selected-row 1
dos2unix
dos2unix
echo -en "<span size='150%' rise='-1500'></span>\tRockerz 255 Pro+\n<span size='150%' rise='-1500'></span>\t01590d05\n<span size='150%' rise='-1500'></span>\tb9dec89d\n<span size='150%' rise='-1500'></span>\tJBL E25BT\n<span size='150%' rise='-1500'></span>\tJR_JioSTB-RFLSBLF82066137\n" | rofi -markup -markup-rows -theme "/home/utkarsh/.config/rofi/bluetooth-applet.rasi" -mesg "Status: NOT CONNECTED	Device: Not Available" -dmenu -selected-row 1
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
echo -en '"<span size='\''150%'\'' rise='\''-1500'\''></span>\tRockerz 255 Pro+\n<span size='\''150%'\'' rise='\''-1500'\''></span>\t01590d05\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tb9dec89d\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tJBL E25BT\n<span size='\''150%'\'' rise='\''-1500'\''></span>\tJR_JioSTB-RFLSBLF82066137\n"'
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
.config/polybar/launch.sh 
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth --status
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
rofi -help
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl status
bluetoothctl help
bluetoothctl list
bluetoothctl devices
bluetoothctl power
"$(bluetoothctl show | grep -q "Powered: yes")"
$(bluetoothctl show | grep -q "Powered: yes")
bluetoothctl show | grep -q "Powered: yes"
bluetoothctl power
bluetoothctl devices
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl
bluetoothctl list
bluetoothctl show
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl show
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl show
[[ "" ]]
[[ "s" ]]
[[ -z "s" ]]
[[ ! -z "s" ]]
[[ ! -z "s" ]]
if [[ ! -z "s" ]]
[[ "s" ]] && echo "yes" || echo "no"
[[ "" ]] && echo "yes" || echo "no"
"" && echo "yes" || echo "no"
echo "" && echo "yes" || echo "no"
[ "" ] && echo "yes" || echo "no"
[ " " ] && echo "yes" || echo "no"
bluetoothctl show
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl show
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl show
[200~echo "$(bluetoothctl show | grep -q "Powered: yes")"~
echo "$(bluetoothctl show | grep -q "Powered: yes")"
echo "$(bluetoothctl show | grep "Powered: yes")"
echo "$(bluetoothctl show | grep "Powered: yes")" && echo "yes" || echo "no"
echo "$(bluetoothctl show | grep -q "Powered: yes")" && echo "yes" || echo "no"
echo "$(bluetoothctl show | grep -q "Powered: yes")" && echo "yes" || echo "no"
bluetoothctl show | grep -q "Powered"
bluetoothctl show 
bluetoothctl power off
echo "$(bluetoothctl show | grep -q "Powered: yes")" && echo "yes" || echo "no"
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl show 
bluetoothctl scan
bluetoothctl scan le
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl show
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl show
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl show
bluetoothctl show
bluetoothctl discoverable on
bluetoothctl discoverable off
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/launch.sh 
./.config/polybar/launch.sh 
./.config/polybar/launch.sh 
./.config/polybar/launch.sh 
./.config/polybar/launch.sh 
./.config/polybar/launch.sh 
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
echo '<span size='\''150%'\'' rise='\''-1500'\''></span>	Rockerz 255 Pro+' | sed -e 's/<[^>]*>//g'
echo '<span size='\''150%'\'' rise='\''-1500'\''></span>	Rockerz 255 Pro+' | sed -e 's/<[^>]*>//g' | cut -d " " -f 2
echo '<span size='\''150%'\'' rise='\''-1500'\''></span>	Rockerz 255 Pro+' | sed -e 's/<[^>]*>//g' | cut -d " " -f 1
echo '<span size='\''150%'\'' rise='\''-1500'\''></span>	Rockerz 255 Pro+' | sed -e 's/<[^>]*>//g' | cut -d $'\t' -f 1
echo '<span size='\''150%'\'' rise='\''-1500'\''></span>	Rockerz 255 Pro+' | sed -e 's/<[^>]*>//g' | cut -d $'\t' -f 2
echo '<span size='\''150%'\'' rise='\''-1500'\''></span>	Rockerz 255 Pro+' | sed -e 's/<[^>]*>//g' | cut -d $' ' -f 2
echo '<span size='\''150%'\'' rise='\''-1500'\''></span>	Rockerz 255 Pro+' | sed -e 's/<[^>]*>//g' | cut -d $' ' -f 1
echo '<span size='\''150%'\'' rise='\''-1500'\''></span>	Rockerz 255 Pro+' | sed -e 's/<[^>]*>//g' | cut -d $'\t' -f 1
echo '<span size='\''150%'\'' rise='\''-1500'\''></span>	Rockerz 255 Pro+' | sed -e 's/<[^>]*>//g' | cut -d $'\t' -f 2
./.config/polybar/scripts/rofi-bluetooth
bluetoothctl devices | grep Device | cut -d ' ' -f 3- | sed 's/.*/<span size="150%" rise="-1500"><\/span>\t&/'
bluetoothctl devices | grep Device | cut -d ' ' -f 3- | sed 's/.*/<span size="150%" rise="-1500"><\/span>\t&/'
bluetoothctl devices | grep Device | cut -d ' ' -f 3- | sed 's/.*/<span size="150%" rise="-1500"><\/span>\t&/' | | cut -d ' ' -f 3-
bluetoothctl devices | grep Device | cut -d ' ' -f 3- | sed 's/.*/<span size="150%" rise="-1500"><\/span>\t&/' | cut -d ' ' -f 3-
bluetoothctl devices | grep Device | cut -d ' ' -f 3- | sed 's/.*/<span size="150%" rise="-1500"><\/span>\t&/' | cut -d ' ' -f 2
bluetoothctl info "Rockerz 255 Pro+"
bluetoothctl devices
bluetoothctl devices | grep "Rockerz 255 Pro+" | xargs bluetooth info {} \;
bluetoothctl devices | grep "Rockerz 255 Pro+" | xargs bluetoothctl info {} \;
bluetoothctl devices | grep "Rockerz 255 Pro+" | cut -d " " -f 2 | xargs bluetoothctl info {} \;
bluetoothctl devices | grep "Rockerz 255 Pro+" | cut -d " " -f 2;
bluetoothctl devices | grep "Rockerz 255 Pro+" | cut -d " " -f 2 | xargs bluetoothctl info "{}" \;
bluetoothctl devices | grep "Rockerz 255 Pro+" | cut -d " " -f 2 | xargs bluetoothctl info '{}' \;
bluetoothctl devices | grep "Rockerz 255 Pro+" | cut -d " " -f 2 | xargs bluetoothctl info {} ;
bluetoothctl devices | grep "Rockerz 255 Pro+" | cut -d " " -f 2 | xargs bluetoothctl info;
bluetoothctl devices | grep "Rockerz 255 Pro+" | cut -d " " -f 2 | bluetoothctl info;
bluetoothctl devices | grep "Rockerz 255 Pro+" | cut -d " " -f 2 | xargs bluetoothctl info;
bluetoothctl devices | grep "Rockerz 255 Pro+" | cut -d " " -f 2 | xargs bluetoothctl info
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
./.config/polybar/scripts/rofi-bluetooth
cd ..
chezmoi add .config/polybar.chirp/
chezmoi add .config/wal/
chezmoi add .config/rofi/
chezmoi re-add
note
ls
ls Notes/
ll Notes/
nano .bashrc 
rm -r Notes/
ls
chezmoi diff
chezmoi re-add
chezmoi re-add
.config/polybar/launch.sh 
.config/polybar/scripts/rofi-netctl 
htop
rofi -theme .config/rofi/bluetooth-applet.rasi -dmenu
rofiToggleWifiIcon="直" rofi -theme .config/rofi/bluetooth-applet.rasi -dmenu
rofiToggleWifiIcon="直" rofi -theme .config/rofi/network-applet.rasi -dmenu
rofiToggleWifiIcon="直" rofi -theme .config/rofi/network-applet.rasi -dmenu
rofiToggleWifiIcon="" rofi -theme .config/rofi/network-applet.rasi -dmenu
rofiToggleWifiIcon="ads" rofi -theme .config/rofi/network-applet.rasi -dmenu
rofiToggleWifiIcon="ads" rofi -theme .config/rofi/network-applet.rasi -dmenu
rofiToggleWifiIcon="\"直\" rofi -theme .config/rofi/network-applet.rasi -dmenu
"
rofiToggleWifiIcon="\"直\"" rofi -theme .config/rofi/network-applet.rasi -dmenu
rofiToggleWifiIcon="\"直\"" rofi -theme .config/rofi/network-applet.rasi -dmenu
htop
export teststring='Hyper'
echo $teststring
export teststring='"Hyper"'
echo $teststring
. .config/polybar/scripts/rofi-bluetooth 
chezmoi re-add
mkdir tmp
ls tmp/
archive-history -o tmp/
ls tmp/
ll tmp/
bspwmerr
bsperr
spicetify apply
nano scripts/wal-static-server 
spicetify apply
